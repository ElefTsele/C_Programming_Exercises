name: Build and Test All

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ENABLE_LOGGING: true # Enable/disable logging in CI

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        exercise: [01, 02]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Build example (if exists)
        run: |
          FILE=$(find examples -name "${{ matrix.exercise }}_*_example.c" | head -n 1)
          echo "Found file: $FILE"
          if [ -f "$FILE" ]; then
            echo "Running example for EXERCISE=${{ matrix.exercise }}"
            make EXERCISE=${{ matrix.exercise }} run_example
          else
            echo "No example file for EXERCISE=${{ matrix.exercise }} — Skipping."
          fi

      - name: Run manual test (if exists)
        run: |
          FILE=$(find tests/manual -name "${{ matrix.exercise }}_*_manual.c" | head -n 1)
          echo "Found file: $FILE"
          if [ -f "$FILE" ]; then
            echo "Running manual test for EXERCISE=${{ matrix.exercise }}"
            make EXERCISE=${{ matrix.exercise }} run_manual_test
          else
            echo "No manual test file for EXERCISE=${{ matrix.exercise }} — Skipping."
          fi

      - name: Run Unity test (if exists)
        run: |
          FILE=$(find tests/unity -name "${{ matrix.exercise }}_*_unity.c" | head -n 1)
          echo "Found file: $FILE"
          if [ -f "$FILE" ]; then
            echo "Running unity test for EXERCISE=${{ matrix.exercise }}"
            make EXERCISE=${{ matrix.exercise }} run_unity_test
          else
            echo "No unity test file for EXERCISE=${{ matrix.exercise }} — Skipping."
          fi

      - name: Check include paths
        run: |
          make EXERCISE=${{ matrix.exercise }} check_includes || echo "Include check skipped"
      